services:
  auth_postgres:
    image: postgres:16
    restart: always
    container_name: auth_postgres
    env_file:
      - ./cmd/auth/.env
    ports:
      - "5434:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 3s
      timeout: 2s
      retries: 5
    volumes:
      - auth_postgres_data:/var/lib/postgresql/data

  auth_migrate:
    image: migrate/migrate
    container_name: auth_migrate
    depends_on:
      auth_postgres:
        condition: service_healthy
    volumes:
      - ./internal/auth/migrations:/migrations
    env_file:
      - ./cmd/auth/.env
    command:
      [
        "-path", "/migrations",
        "-database", "postgres://postgres:my_pass@auth_postgres:5432/auth_db?sslmode=disable",
        "up"
      ]

  auth_service:
    build:
      context: .
      dockerfile: ./cmd/auth/Dockerfile
    container_name: auth_service
    env_file:
      - ./cmd/auth/.env
    depends_on:
      auth_postgres:
        condition: service_healthy
    ports:
      - "50051:50051"
    volumes:
      - ./jwt_private.pem:/app/jwt_private.pem
      - ./jwt_public.pem:/app/jwt_public.pem


volumes:
  auth_postgres_data: